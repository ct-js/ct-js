{
    "me": {
        "id": "Eng",
        "native": "English",
        "eng": "English"
    },
    "common": {
        "add": "Add",
        "apply": "Apply",
        "cancel": "Cancel",
        "cannotBeEmpty": "This cannot be empty",
        "clear": "Clear",
        "close": "Close",
        "confirmDelete": "Are you sure you want to delete {0}? It cannot be undone.",
        "contribute": "Contribute",
        "copy": "Copy",
        "copyName": "Copy the name",
        "couldNotLoadFromClipboard": "Could not load data from clipboard",
        "cut": "Cut",
        "delete": "Delete",
        "docsShort": "Docs",
        "docsLong": "Documentation",
        "donate": "Donate",
        "done": "Done!",
        "duplicate": "Duplicate",
        "exit": "Exit",
        "edit": "Edit",
        "filter": "Filter:",
        "loading": "Loading…",
        "name": "Name:",
        "next": "Next",
        "no": "No",
        "none": "None",
        "nothingToShowFiller": "There is nothing to show here!",
        "ok": "Ok",
        "open": "Open",
        "paste": "Paste",
        "pastedFromClipboard": "Pasted from clipboard",
        "previous": "Previous",
        "rename": "Rename",
        "required": "Required",
        "save": "Save",
        "selectDialogue": "Select…",
        "select": "Select",
        "search": "Search:",
        "settings": "Settings",
        "sort": "Sort:",
        "wrongFormat": "Wrong file format",
        "yes": "Yes",
        "zoom": "Zoom",
        "zoomIn": "Zoom in",
        "zoomOut": "Zoom out",
        "undo": "Undo",
        "redo": "Redo",
        "fieldTypes": {
            "checkbox": "Checkbox",
            "code": "Codebox",
            "color": "Color",
            "group": "Group of fields",
            "h1": "Header of 1st level",
            "h2": "Header of 2nd level",
            "h3": "Header of 3rd level",
            "h4": "Header of 4th level",
            "number": "Number",
            "point2D": "2D point",
            "radio": "Radio buttons",
            "slider": "Slider",
            "sliderAndNumber": "Slider with a number input",
            "table": "Table",
            "text": "Short text",
            "textfield": "Textbox",
            "texture": "Texture",
            "template": "Template",
            "room": "Room",
            "sound": "Sound",
            "tandem": "Particle emitter"
        },
        "newName": "New name:",
        "saveProject": "Save project",
        "openProject": "Open project…",
        "savedMessage": "Your project was succesfully saved.",
        "reallyExitConfirm": "Are you sure you want to exit? All unsaved changes will be lost.",
        "notFoundOrUnknown": "Unknown file. Make sure the file really exists",
        "nameTaken": "This name is already taken",
        "fastImport": "Fast Import",
        "addToNotes": "Add to notes",
        "noRooms": "You need at least one room to compile your app.",
        "tileLayer": "tile layer",
        "ctSite": "ct.js homepage",
        "openAssetGallery": "Gallery",
        "assetTypes": {
            "textures": [
                "texture",
                "textures",
                "textures"
            ],
            "templates": [
                "template",
                "templates",
                "templates"
            ],
            "emitterTandems": [
                "emitter tandem",
                "emitter tandems",
                "emitter tandems"
            ],
            "rooms": [
                "room",
                "rooms",
                "rooms"
            ],
            "fonts": [
                "font",
                "fonts",
                "fonts"
            ],
            "styles": [
                "style",
                "styles",
                "styles"
            ],
            "sounds": [
                "sound",
                "sounds",
                "sounds"
            ],
            "skeletons": [
                "skeletal sprite",
                "skeletal sprites",
                "skeletal sprites"
            ]
        }
    },
    "assetInput": {
        "changeAsset": "Press to change the asset",
        "jumpToAsset": "Jump to this asset",
        "selectAssetHeader": "Select an asset"
    },
    "assetViewer": {
        "addNewGroup": "New Group",
        "ungrouped": "Show ungrouped",
        "newGroupName": "New group",
        "groupDeletionConfirmation": "Are you sure you want to delete this group? All its assets will be ungrouped."
    },
    "builtinAssetGallery": {
        "galleryTip": "This is a free, built-in gallery of various textures and sounds. All the assets are CC0 or WTFPL, or are released under special terms for use in ct.js. In any way, you can use these assets however you like, in commercial and other projects.",
        "assetGalleryHeader": "Assets",
        "importIntoProject": "Import into the current project",
        "importAll": "Import all",
        "byAuthorPrefix": "by",
        "cannotImportExplanation": "The name that this asset would take is taken by some other asset. You may need to rename existing assets; or maybe you've already imported this asset?",
        "nameOccupied": "Name occupied",
        "cannotImportNameOccupied": "Cannot import $1 as such name is already occupied.",
        "visitSource": "Open the store page of this asset pack",
        "visitAuthorsItch": "Visit author's itch.io page",
        "visitAuthorsTwitter": "Visit author's Twitter page",
        "tipAuthor": "Tip the author for their hard work :D"
    },
    "colorPicker": {
        "current": "New",
        "globalPalette": "Global Palette",
        "old": "Old",
        "projectPalette": "Project's Palette"
    },
    "curveEditor": {
        "curveLineHint": "Click the curve to add a point",
        "dragPointHint": "Drag to move the point, right-click to delete it",
        "pointTime": "Time:",
        "pointValue": "Value:"
    },
    "debuggerToolbar": {
        "pause": "Pause",
        "resume": "Resume the game",
        "restartGame": "Restart the game",
        "restartRoom": "Restart the room",
        "switchRoom": "Go to room…",
        "toggleDevTools": "Toggle dev. tools",
        "screenshot": "Take a screenshot",
        "enterFullscreen": "Enter fullscreen",
        "exitFullscreen": "Exit fullscreen",
        "links": "Links and QR-codes",
        "openExternal": "Open in browser",
        "close": "Close"
    },
    "docsShortcut": {
        "openDocs": "Open the documentation"
    },
    "docsPanel": {
        "documentation": "Documentation",
        "reference": "Reference"
    },
    "exportPanel": {
        "hide": "Hide",
        "working": "Working…",
        "debug": "Debug version",
        "export": "Export",
        "exportPanel": "Export the Project",
        "log": "Message Log",
        "windowsCrossBuildWarning": "To build for Windows from Linux/MacOS, you need Wine installed in your system. Install instructions are all different for various platforms, so you better google it yourself :)",
        "cannotBuildForMacOnWin": "Unfortunately, Windows can only produce broken Mac packages. Try using a Linux machine; for example, in a virtual one. It is 100% free!",
        "projectTitleRequired": "You must add a title to your project in the Project tab → Authoring → Name.",
        "appIdRequired": "You must set a unique appId in the Project tab → Authoring → App ID to distribute this app.",
        "noAndroidSdkFound": "No Android SDK was found (ANDROID_SDK_ROOT environment variable is not set). You can get Android SDK by installing Android Studio:",
        "envVarNotice": "You may still need to set this environment variable manually and restart your device.",
        "downloadAndroidStudio": "Download Android Studio",
        "requiresInternetNotice": "This operation requires Internet connection to setup each project.",
        "noJdkFound": "No JDK 11 was found (JAVA_HOME environment variable is not set or doesn't point to JDK 11). You can get JDK 11 here:",
        "downloadJDK": "Download JDK 11",
        "firstRunNotice": "The first run for each platform will be slow as ct.js will download and save additional libraries needed for packing. It will take some time, but next times will be almost instant."
    },
    "extensionsEditor": {
        "noEntries": "No entries yet.",
        "addRow": "Add a row",
        "actions": "Actions",
        "values": "Values",
        "moveDown": "Move down",
        "moveUp": "Move up",
        "deleteRow": "Delete row"
    },
    "groupEditor": {
        "groupEditor": "Group Editor",
        "icon": "Icon:",
        "color": "Color:"
    },
    "intro": {
        "loading": "Please wait: kittens are gathering speed of light!",
        "newProject": {
            "button": "Select folder and create",
            "input": "Project's name (letters and digits)",
            "text": "Create new",
            "saveProjectHere": "Save the project here",
            "selectProjectFolder": "Select a folder in which to store your project",
            "nameError": "Wrong project name"
        },
        "recovery": {
            "message": "<h2 class=\"nmt\">Recovery</h2><p>ct.js has found a recovery file. Possibly, your project was not saved correctly or ct.js was shut down in case of some emergency. Here is when these files were lastly modified:</p><p>Your chosen file: {0} {1}<br/>Recovery file: {2} {3}</p><p>What file should ct.js open?</p>",
            "loadTarget": "Target File",
            "loadRecovery": "Recovery",
            "newer": "<b>(newer)</b>",
            "older": "(older)"
        },
        "loadingProject": "Loading the project…",
        "loadingProjectError": "Cannot open this project because of the following error: ",
        "homepage": "Homepage",
        "latestVersion": "Version $1 is available",
        "forgetProject": "Forget this project",
        "cloneProject": "Clone this project into a new location",
        "browse": "Browse",
        "latest": "Latest projects",
        "examples": "Examples",
        "templates": "Templates",
        "templatesInfo": "You can kickstart your game development by using one of these templates. They contain placeholder graphics only but have working mechanics. Selecting a project will open a save directory selector for your new project.",
        "unableToWriteToFolders": "Ct.js could not find an appropriate place for projects! Make sure you store ct.js app inside a folder you have access to write to.",
        "twitter": "Twitter channel",
        "discord": "Discord community",
        "github": "Ct.js at Github",
        "itch": "Ct.js' store page on itch.io",
        "vkontakte": "Vkontakte public community",
        "patreon": "Support ct.js on Patreon!",
        "boosty": "Support ct.js on Boosty!",
        "createOrBrowseJunction": "or"
    },
    "onboarding": {
        "hoorayHeader": "Wow! You've just created a project!",
        "nowWhatParagraph": "Now, what should we do?",
        "openSpaceShooterTutorial": "Learn how to make a space shooter",
        "openPlatformerTutorial": "Learn how to make a platformer",
        "openJettyCatTutorial": "Learn how to make a Jetty Cat",
        "doNothing": "Skip this screen and make a great game!",
        "showOnboardingCheckbox": "Show this screen when creating a new project"
    },
    "settings": {
        "actions": {
            "heading": "Actions and input methods",
            "actions": "Actions",
            "addAction": "Add an action",
            "addMethod": "Add an input method",
            "deleteAction": "Delete this action",
            "deleteMethod": "Delete this method",
            "inputActionNamePlaceholder": "Action name",
            "methodModuleMissing": "The required module for this method is missing",
            "methods": "Input methods",
            "multiplier": "Multiplier",
            "noActionsYet": "Actions allow developers to listen to numerous input methods at once and dynamically change them, all with one uniform API. Read more by clicking on the docs icon above.",
            "makeFromScratch": "Make from scratch",
            "presets": "Presets",
            "presetXYMovement": "Generic XY movement",
            "presetTouchAndMouse": "Mouse & Touch",
            "presetCustom": "Import your own",
            "exportActionPreset": "Export as a preset",
            "importErrorMissingModules": "Cannot import action preset as your ct.js installation lacks following modules: $1.",
            "importErrorNotCtJsPreset": "This file doesn't look like ct.js' actions preset."
        },
        "authoring": {
            "heading": "Authoring",
            "author": "Developer:",
            "site": "Homepage:",
            "title": "Name:",
            "version": "Version:",
            "versionPostfix": "Postfix:",
            "appId": "App ID",
            "appIdExplanation": "This is mainly used in mobile builds. It is a unique string that identifies your game. It usually follows the format zone.developer.projectName, and, say, rocks.ctjs.catsteroids is a good example for that."
        },
        "branding": {
            "heading": "Branding",
            "accent": "Accent:",
            "accentNotice": "Sets the color of the preloader, as well as of some other places if used as a mobile app.",
            "icon": "Game's icon:",
            "iconNotice": "It should be a square, one-frame texture that is at least 256x256px large.",
            "splashScreen": "Splash screen:",
            "splashScreenNotice": "This image will be used in mobile builds. It should be at least 1920x1920px large, and will be resized and cropped for portrait and landscape screen orientation, so make sure everything important is in the center square.",
            "forceSmoothIcons": "Use smooth icons regardless of rendering settings",
            "forceSmoothSplashScreen": "Use smooth splash screen images regardless of rendering settings",
            "invertPreloaderScheme": "Invert preloader's color scheme",
            "hideLoadingLogo": "Hide \"Made with ct.js\" graphics on the loading screen"
        },
        "content": {
            "heading": "Content type editor",
            "addContentType": "Add a type",
            "missingTypeName": "Unnamed content type",
            "unnamedContentTypeHint": "This content type is unnamed. It will not be usable in-game unless you add the name.",
            "typeName": "Content type name",
            "typeNameHint": "The name of your content type as it will be used in code. Examples: GearItems, EnemySkills, Cities.",
            "typeReadableName": "Readable name",
            "typeReadableNameHint": "The readable name of your content type, which is shown here and in content editors.",
            "icon": "Icon",
            "typeSpecification": "Content schema",
            "fieldName": "Name",
            "fieldNameHint": "The name of the field as it will be used in code. For example: power, hp, spawnType.",
            "fieldReadableName": "Readable name",
            "fieldReadableNameHint": "The readable version of the name, which is used in the content editor.",
            "fieldType": "Type",
            "array": "Array",
            "deleteContentType": "Delete this content type",
            "confirmDeletionMessage": "Are you sure you want to delete this content type? It is irreversible and will also delete all the entries of this content type.",
            "gotoEntries": "Go to entries",
            "entries": "Entries"
        },
        "modules": {
            "heading": "Catmods"
        },
        "rendering": {
            "heading": "Render Options",
            "framerate": "Framerate:",
            "highDensity": "Support high pixel density (e.g. on retina screens)",
            "maxFPS": "Max framerate:",
            "hideCursor": "Hide system cursor",
            "usePixiLegacy": "Add a legacy, canvas-based renderer to support older browsers and graphics cards (adds ~20kb up to your game)",
            "desktopBuilds": "Desktop builds",
            "launchMode": "Launch mode:",
            "launchModes": {
                "maximized": "Maximized",
                "fullscreen": "Fullscreen",
                "windowed": "Windowed"
            },
            "mobileBuilds": "Mobile builds",
            "screenOrientation": "Screen orientation:",
            "screenOrientations": {
                "unspecified": "Any",
                "landscape": "Landscape",
                "portrait": "Portrait"
            },
            "pixelatedRender": "Disable image smoothing here and in exported project (preserve crisp pixels)"
        },
        "scripts": {
            "heading": "Custom scripts",
            "addNew": "Add a New Script",
            "deleteScript": "Delete the script",
            "moveDown": "Move down",
            "moveUp": "Move up",
            "newScriptComment": "Use scripts to define frequent functions and import small libraries"
        },
        "export": {
            "heading": "Export settings",
            "functionWrap": "Wrap all the code in a function. (Makes debugging harder, but isolates the game's code from outer context. Do not enable while developing the game.)",
            "codeModifier": "Code transformations",
            "obfuscateWarning": "This option will make your code run 15-80% slower, but will make your code extremely hard to revert back to the original.",
            "codeModifierAndWrapNote": "Note that these settings only work for exported projects (Export for web and Export for desktop commands) as they noticeably slow packaging and make debugging harder. You can force them, though, in the Main menu → Settings → Force production tasks for debug exports.",
            "codeModifiers": {
                "none": "None",
                "minify": "Minify",
                "obfuscate": "Obfuscate"
            }
        },
        "catmodsSettings": "Catmods' settings",
        "contentTypes": "Content Types"
    },
    "modules": {
        "author": "Author of this catmod",
        "dependencies": "Dependencies:",
        "help": "Reference",
        "info": "Info",
        "license": "License",
        "logs": "Changelog",
        "methods": "Methods",
        "optionalDependencies": "Optional dependencies:",
        "parameters": "Parameters",
        "logs2": "Changelog",
        "settings": "Settings",
        "importModules": "Import Modules",
        "enabledModules": "Enabled modules",
        "availableModules": "Available modules",
        "filter": "Filter",
        "preview": "(preview)",
        "previewTooltip": "This module has not yet been released and is for preview purposes.",
        "deprecatedTooltip": "This module is deprecated and will be removed in a future version.",
        "categories": {
            "customization": "Customization",
            "utilities": "Utilities",
            "media": "Multimedia",
            "misc": "Other",
            "desktop": "Desktop builds",
            "motionPlanning": "Motion planning",
            "inputs": "Input methods",
            "fx": "FX",
            "mobile": "Mobile devices",
            "integrations": "Integrations",
            "tweaks": "Tweaks",
            "networking": "Networking"
        }
    },
    "texture": {
        "create": "Create",
        "import": "Import",
        "skeletons": "Skeletal Animation",
        "textures": "Textures",
        "createTemplate": "Create a template from it",
        "importFromClipboard": "Import from clipboard",
        "generatePlaceholder": "Generate a placeholder"
    },
    "textureGenerator": {
        "name": "Texture's name:",
        "width": "Width:",
        "height": "Height:",
        "color": "Background color:",
        "label": "Label:",
        "optional": "(optional)",
        "createAndClose": "Create and close",
        "createAndContinue": "Create and add another",
        "scalingAtX4": "Scaling by x4 for a small texture",
        "generationSuccessMessage": "Successfully added $1 texture to your project.",
        "form": "Form",
        "formRectangular": "Rectangular",
        "formRound": "Round",
        "formDiamond": "Diamond",
        "filler": "Filler:",
        "fillerNone": "None",
        "fillerCross": "Cross",
        "fillerArrow": "Arrow",
        "fillerLabel": "Text label"
    },
    "sounds": {
        "create": "Create",
        "record": "Record"
    },
    "soundRecorder": {
        "recorderHeading": "Recorder",
        "record": "Start recording",
        "stopRecording": "Stop recorder",
        "discardRecording": "Discard the recording",
        "finishRecording": "Finish recording",
        "cannotRecordSound": "Cannot start recorder: check your audio configuration and the recording device.",
        "troubleshootingWindows": "On Windows, also go to Settings -> Privacy -> Microphone and check that apps are allowed to access your microphone."
    },
    "styles": {
        "create": "Create",
        "styles": "Text Styles"
    },
    "fonts": {
        "fonts": "Fonts",
        "import": "Import TTF",
        "italic": "Italic"
    },
    "particleEmitters": {
        "emittersHeading": "Particle emitters",
        "emitterHeading": "Emitter",
        "from": "From:",
        "to": "To:",
        "textureHeading": "Texture",
        "selectTexture": "Select…",
        "importBuiltin": "Import default…",
        "colorAndOpacityHeading": "Color and Opacity",
        "stepped": "Stepped",
        "steppedColor": "Stepped color",
        "steppedAlpha": "Stepped opacity",
        "blendMode": "Blend mode:",
        "regular": "Regular",
        "darken": "Darken",
        "lighten": "Lighten",
        "burn": "Burn",
        "scalingHeading": "Scaling",
        "scale": "Scale:",
        "minimumSize": "Minimum size:",
        "minimumSizeHint": "Setting it to lower values will randomize the size of each particle. The lower the values, the stronger the effect.",
        "velocityHeading": "Velocity",
        "velocity": "Velocity:",
        "minimumSpeed": "Minimum speed:",
        "minimumSpeedHint": "Setting it to lower values will randomize the speed of each particle; the lower the value, the slower the particle may be.",
        "maxSpeed": "Max speed:",
        "gravityHeading": "Gravity",
        "gravityNotice": "Note that if it differs from (0;0), velocity interpolation will be disabled, meaning that only the first node of the velocity graph will have the effect.",
        "directionHeading": "Direction",
        "startingDirection": "Starting direction",
        "preserveTextureDirection": "Preserve texture rotation",
        "rotationHeading": "Rotation",
        "rotationSpeed": "Rotation speed",
        "rotationAcceleration": "Rotation acceleration:",
        "spawningHeading": "Spawning",
        "timeBetweenBursts": "Time between bursts:",
        "spawnAtOnce": "Spawn at once:",
        "chanceToSpawn": "Chance to spawn a particle:",
        "maxParticles": "Max particles:",
        "lifetime": "Particle lifetime, sec.",
        "emitterLifetime": "Emitter lifetime, sec.:",
        "prewarmDelay": "Prewarm / delay, sec.:",
        "prewarmDelayNotice": "Negative values will prepare the particles of the emitter before showing it, which is useful for long effects like dust particles or mist that should already be visible on room start; positive values will delay the simulation.",
        "shapeAndPositioningHeading": "Shape and Positioning",
        "spawnType": "Shape type:",
        "spawnShapes": {
            "point": "Point",
            "rectangle": "Rectangle",
            "circle": "Circle",
            "ring": "Ring",
            "star": "Star"
        },
        "width": "Width:",
        "height": "Height:",
        "radius": "Radius:",
        "starPoints": "Points:",
        "startAngle": "Rotate, deg.:",
        "showShapeVisualizer": "Show shape visualizer",
        "relativeEmitterPosition": "Position relative to other emitters",
        "addEmitter": "Add another emitter",
        "reset": "Reset preview",
        "changeBg": "Change background",
        "inspectorComplete": "Complete!",
        "alreadyHasAnImportingTexture": "You already have a texture named $1. Either delete it or rename it; though you must be importing the same texture you've added before :)",
        "changeGrid": "Set grid size",
        "newGridSize": "New grid size:",
        "setPreviewTexture": "Set preview texture"
    },
    "rooms": {
        "create": "Add new",
        "makeStarting": "Set as the starting room"
    },
    "notepad": {
        "local": "Project's notepad",
        "global": "Global notepad",
        "backToHome": "Back to docs' homepage",
        "modulesPages": "Modules' docs",
        "helpPages": "Learn"
    },
    "patreon": {
        "aboutPatrons": "Patrons are people who show their support to ComigoGames at Patreon, in form of recurring donations. Not everyone there comes from ct.js; some are using other apps from ComigoGames. Tip: if you are a creator and donate to ComigoGames via Patreon, you will get a link to your page here — that's my little help to your creations :)",
        "patronsHeader": "Our patrons",
        "businessShuttles": "Business shuttles",
        "noShuttlesYet": "No business shuttles yet :c Your company may be the first one, though!",
        "shuttlesDescription": "Business shuttles are considered as partners of ct.js. They are listed on ct.js' homepage and its store pages.",
        "spacePirates": "Space Pirates",
        "noPiratesYet": "There are no Space Pirates yet :c",
        "piratesDescription": "Space Pirates get priority support on Discord server with a cool role, and get listed here.",
        "spaceProgrammers": "Space Programmers",
        "programmersDescription": "\"Space Programmer\" is a legacy tier that was available before ct.js went open-source and brought sources of jam games to patrons.",
        "aspiringAstronauts": "Aspiring Astronauts",
        "noAstronautsYet": "There are no Aspiring Astronauts yet :c",
        "astronautsDescription": "Astronauts get a special role in Discord and get listed here!",
        "thankAllPatrons": "Thanks to all ComigoGames patrons, current and former ones, as your support keeps Comigo moving forward and making even better apps! :)",
        "becomeAPatron": "Become a patron",
        "aboutFillers": [
            "is cool all around 😎",
            "is nice to chat with 🤗",
            "has yet to become a star 💫",
            "is just a prodigy ⭐️",
            "is a good friend 🤝",
            "is reliable 🙏",
            "has a golden heart 🧡",
            "is a magician 🔮",
            "is here to help! 💪",
            "is a superhero 🦸‍",
            "has yet to show 🦹‍",
            "is an unsolved mystery 🔍",
            "is epic! ✨",
            "is probably a robot 🤖",
            "is like a blazing fire! 🔥",
            "brings light and hope 🌞",
            "is elegant and beautiful 🎩"
        ]
    },
    "textureInput": {
        "jumpToTexture": "Jump to the texture",
        "changeTexture": "Change texture"
    },
    "writableFolderPrompt": {
        "headerSelectFolderForData": "Select a folder for ct.js data",
        "paragraphCouldNotPickDirectory": "Oh noes! Ct.js could not find a folder for your projects, package builds, and for debugging. Ct.js usually finds one automatically, but this time all the folders it was looking for are read-only!",
        "paragraphDirectoryDirections": "This can be fixed, though. Click the button below and select a folder at which to store data. If you are unsure, create a \"ct.js\" directory in your Documents folder.",
        "selectFolder": "Select folder…"
    },
    "writableFolderSelector": {
        "folderDoesNotExist": "It seems that this folder does not exist… How did you do that?",
        "notADirectory": "This doesn't seem to be a directory! How did you do that?",
        "folderNotWritable": "You don't have access to write to this folder. Pick another one.",
        "complete": "Folder was set, all is good ✅"
    },
    "mainMenu": {
        "troubleshooting": {
            "toggleDevTools": "Toggle Dev Tools",
            "copySystemInfo": "Copy system information",
            "systemInfoWait": "Wait a bit, I'm gathering the data…",
            "systemInfoDone": "Done!",
            "disableAcceleration": "Disable graphics acceleration (needs restart)",
            "disableBuiltInDebugger": "Disable built-in debugger",
            "postAnIssue": "Post an issue on Github…",
            "heading": "Troubleshooting"
        },
        "deploy": {
            "heading": "Deploy",
            "exportDesktop": "Export for desktop…",
            "successZipExport": "Successfully exported to {0}.",
            "zipExport": "Export for web",
            "exportAndroid": "Export for Android…"
        },
        "latestProjects": {
            "recentProjects": "Recent projects"
        },
        "settings": {
            "heading": "Settings",
            "theme": "Theme",
            "themes": {
                "Day": "Day",
                "Night": "Night",
                "SpringStream": "Spring Stream",
                "LucasDracula": "Lucas Dracula",
                "Horizon": "Horizon",
                "HCBlack": "High-contrast Black",
                "RosePine": "Rosé Pine",
                "RosePineMoon": "Rosé Pine Moon",
                "RosePineDawn": "Rosé Pine Dawn"
            },
            "prideMode": "Pride mode",
            "language": "Language",
            "translateToYourLanguage": "Translate ct.js!",
            "codeFontDefault": "Default (Iosevka Light)",
            "codeFontOldSchool": "Old school",
            "codeFontSystem": "System",
            "codeFontCustom": "Custom…",
            "newFont": "New font:",
            "codeFont": "Font for code",
            "codeLigatures": "Ligatures",
            "codeDense": "Dense layout",
            "altTemplateLayout": "Alternative layout for template editor",
            "disableSounds": "Disable UI sounds",
            "changeDataFolder": "Set data folder location",
            "forceProductionForDebug": "Force production tasks for debug exports"
        },
        "project": {
            "heading": "Project",
            "save": "Save project",
            "openIncludeFolder": "Open \"include\" folder",
            "openProject": "Open a project…",
            "openExample": "Open an example project…",
            "startScreen": "Return to the starting screen",
            "successZipProject": "Successfully zipped the project to {0}.",
            "zipProject": "Pack project to .zip"
        },
        "meta": {
            "heading": "Meta",
            "license": "License",
            "visitDiscordForGamedevSupport": "Discord server",
            "openIconList": "Open the list of icons",
            "openStylebook": "Open CSS stylebook",
            "twitter": "Twitter channel",
            "vkontakte": "Vkontakte public community",
            "ctjsForum": "Join ct.js forum"
        }
    },
    "appView": {
        "ctIDE": "ct.IDE",
        "texture": "Textures",
        "launch": "Launch",
        "launchHotkeys": "(F5; Alt+F5 to run in your default browser)",
        "min": "Windowed",
        "patrons": "Patrons",
        "restart": "Restart",
        "rooms": "Rooms",
        "project": "Project",
        "sounds": "Sounds",
        "ui": "UI",
        "fx": "FX",
        "templates": "Templates",
        "tour": {
            "header": "Ct.js overview",
            "aboutTour": "Welcome to ct.js! This little tour will show you the main controls in this editor, so you know how to configure ct.js and create new assets.",
            "helpPanel": "First of all, note this sneaky button. It is very important for learning ct.js!",
            "helpPanelTabs": "This panel stores all the official docs and tutorials for ct.js and its modules, and also has two notepads for your records.<p>Global notepad is shared between projects and is saved on your device. Project's notepad is stored inside your project.",
            "projectResources": "Now, every project has assets of several types. Every asset type belongs to its own tab. Let's check out the most important tabs.",
            "tabTextures": "Textures are images that can be used for your interactive objects (which are called Copies), backgrounds, and special effects. Textures don't do anything on their own but are definitely a needed asset type.",
            "tabTexturesImport": "You can import textures from your file system…",
            "tabTexturesGallery": "…or import ready-made textures from the built-in library.",
            "tabTexturesClipboard": "This button pastes copied images from clipboard. It is quite handy while working with image editors!",
            "tabTexturesPlaceholders": "You can also generate simple placeholder graphics with this tool.",
            "tabTemplates": "Templates are used to create copies — interactive objects that you place in your levels. Any interactive object in ct.js is created from one of your templates. They use your textures, and you define gameplay logic by creating events in them. Once you've created a template, you can run its own in-deep tour in the template editor.",
            "tabRooms": "Another most important tab is for rooms. Rooms can also be called as levels or scenes in which you place your copies. Rooms can also have their own events and backgrounds.",
            "tabSounds": "Sounds, I guess, is the most obvious tab.",
            "tabSoundsImport": "You can create new sounds with this button…",
            "tabSoundsGallery": "…import them from the built-in sound library…",
            "tabSoundsRecord": "…or even record them with your microphone!",
            "tabInterlude": "There are also two tabs for more advanced assets.",
            "tabUI": "UI tab manages fonts and text styles. Bundling your fonts with the game is important for it to look consistently across devices. Text styles have a visual editor for making style presets. They also produce code for creation of such labels in-game.",
            "tabFX": "The FX tab has an editor for particle systems — special graphical effects for explosions, magic, smoke, rain, all this kind of stuff.",
            "tabProject": "That's it for the assets! But besides these, your project also has a bunch of settings for rendering, branding, packaging and whatnot.",
            "tabProjectModules": "Ct.js is modular, and your projects may need additional modules that can be installed here.",
            "tabProjectModuleDocs": "All the docs for enabled modules can be found here.",
            "tabMainMenu": "Ct.js itself has plenty of options, which are stored in its main menu.",
            "tabMainMenuSettings": "You can change the language and how ct.js looks in the Settings section.",
            "tabMainMenuMeta": "If you'll need help later, you will be able to find all the official hubs in the Meta panel.",
            "helpPanelReminder": "Also don't forget about the built-in docs! We do recommend completing official tutorials before starting your own projects.",
            "buttonStartTutorial": "Open tutorials"
        }
    },
    "roomBackgrounds": {
        "add": "Add a Background",
        "depth": "Depth:",
        "movement": "Movement speed:",
        "parallax": "Parallax:",
        "repeat": "Repeat:",
        "scale": "Scaling:",
        "shift": "Shift:",
        "notBackgroundTextureWarning": "This texture is not marked as a background. It will have gaps when exported.",
        "fixBackground": "Fix it.",
        "dismissWarning": "Dismiss."
    },
    "roomTiles": {
        "moveTileLayer": "Move to a new depth",
        "show": "Show the layer",
        "hide": "Hide the layer",
        "findTileset": "Find a Tileset",
        "addTileLayer": "Add a tile layer"
    },
    "roomView": {
        "name": "Name:",
        "width": "View width:",
        "height": "View height:",
        "isUi": "Is a UI layer?",
        "simulate": "Simulate",
        "grid": "Grid",
        "toggleDiagonalGrid": "Diagonal grid",
        "changeGridSize": "Change cell size",
        "events": "Events",
        "gridOff": "Disable grid",
        "xrayMode": "X-ray mode",
        "colorizeTileLayers": "Colorize tile layers",
        "copies": "Copies",
        "backgrounds": "Backgrounds",
        "backgroundColor": "Background color:",
        "tiles": "Tiles",
        "properties": "Properties",
        "add": "Add",
        "none": "Nothing",
        "done": "Done",
        "hotkeysNotice": "Ctrl = Delete, Alt = No grid, Shift = Multiple",
        "hotkeysNoticeMovement": "Ctrl = Delete, Shift = Select",
        "shift": "Shift everything",
        "step": "On Step",
        "create": "On Create",
        "leave": "On Leave",
        "draw": "Draw",
        "deleteCopies": "Delete copies",
        "shiftCopies": "Shift copies",
        "sortHorizontally": "Sort horizontally",
        "sortVertically": "Sort vertically",
        "selectAndMove": "Select and Move",
        "customProperties": "Custom Properties",
        "findTileset": "Find a tileset",
        "resetView": "Reset view",
        "copyProperties": {
            "position": "Position",
            "rotation": "Rotation",
            "scale": "Scale",
            "opacity": "Opacity",
            "tint": "Tint",
            "multipleValues": "(Multiple)"
        },
        "copyCustomProperties": {
            "addProperty": "Add Property",
            "property": "Property",
            "value": "Value",
            "nameOccupied": "This property is used by ct.js! You should come up with a different name."
        },
        "restrictCamera": "Keep camera in a rectangle",
        "minimumX": "Min X",
        "minimumY": "Min Y",
        "maximumX": "Max X",
        "maximumY": "Max Y",
        "gridSize": "Grid size:",
        "toCenter": "To center",
        "shiftLabel": "Shift by:",
        "newDepth": "New depth:",
        "deleteCopy": "Delete copy {0}",
        "changeCopyScale": "Change scale",
        "shiftCopy": "Set coordinates",
        "deleteTile": "Delete a tile",
        "deleteTiles": "Delete tiles",
        "moveTilesToLayer": "Move to layer",
        "shiftTiles": "Shift tiles",
        "changeCopyRotation": "Rotate",
        "tools": {
            "select": "Select tool",
            "addCopies": "Add copies",
            "addTiles": "Add tiles",
            "manageBackgrounds": "Manage backgrounds",
            "roomProperties": "Room properties"
        }
    },
    "styleView": {
        "active": "Active",
        "alignment": "Alignment:",
        "apply": "Apply",
        "fill": "Fill",
        "font": "Font",
        "italic": "Italic",
        "lineHeight": "Line height:",
        "shadow": "Shadow",
        "stroke": "Stroke",
        "textWrap": "Word wrap",
        "textWrapWidth": "Max width:",
        "useCustomFont": "Use custom font…",
        "code": "Code",
        "copyCode": "Copy",
        "fillColor": "Color:",
        "fillColor1": "Color 1:",
        "fillColor2": "Color 2:",
        "fillGrad": "Gradient",
        "fillGradType": "Gradient type:",
        "fillHorizontal": "Horizontal",
        "fillSolid": "Diffuse",
        "fillType": "Fill type:",
        "fillVertical": "Vertical",
        "fontWeight": "Weight:",
        "shadowBlur": "Blur:",
        "shadowColor": "Shadow color:",
        "shadowShift": "Shift:",
        "strokeColor": "Stroke color:",
        "strokeWeight": "Line weight:",
        "testText": "Test text 0123 +",
        "fontFamily": "Font family:",
        "fontSize": "Font size:"
    },
    "textureView": {
        "center": "Axis:",
        "cols": "Columns:",
        "done": "Apply",
        "fill": "Fill",
        "form": "Collision shape",
        "frames": "Frame count:",
        "isometrify": "Isometrify: Move the axis to the middle bottom point, fill the whole sprite with a collision mask",
        "name": "Name:",
        "radius": "Radius:",
        "rectangle": "Rectangle",
        "reimport": "Reimport",
        "round": "Circle",
        "rows": "Rows:",
        "speed": "Framerate:",
        "tiled": "Use as a background?",
        "updateFromClipboard": "Update from clipboard",
        "corrupted": "File is corrupted or missing! Closing now.",
        "showFrameIndices": "Show frame indices",
        "blankTexture": "Export as blank texture",
        "blankTextureNotice": "Exports the image as a transparent rectangle, thus being invisible in-game. Useful for making placeholders for ct.js editor while keeping bundle size slim.",
        "width": "Width:",
        "height": "Height:",
        "strip": "Line Strip / Polygon",
        "removePoint": "Remove the point",
        "closeShape": "Close the shape",
        "addPoint": "Add a point",
        "moveCenter": "Move axis",
        "movePoint": "Move this point",
        "symmetryTool": "Symmetry tool",
        "padding": "Padding:",
        "paddingNotice": "This affects how a texture is exported: it adds duplicate pixels on edges and prevents bleeding artifacts on tiled and scaled textures. The default value is usually enough, but, if you shrink textures strongly, the bleeding may re-appear. Increment this value if this texture has artifacts while in-game.",
        "previewAnimationNotice": "This is a preview. Use this.animationSpeed property to change it for real copies.",
        "pasteCollisionMask": "Paste a collision mask",
        "copyCollisionMask": "Copy the collision mask",
        "bgColor": "Change bg color",
        "setCenter": "Image's center",
        "replaceTexture": "Replace…",
        "showMask": "Show mask",
        "marginX": "Margin X:",
        "marginY": "Margin Y:",
        "offX": "Offset X:",
        "offY": "Offset Y:"
    },
    "soundView": {
        "import": "Import",
        "name": "Name:",
        "save": "Save",
        "isMusicFile": "This is a musical track",
        "poolSize": "Pool size:"
    },
    "fontView": {
        "italic": "Is italic?",
        "reimport": "Reimport",
        "generateBitmapFont": "Also generate a bitmap font",
        "bitmapFont": "Bitmap font",
        "bitmapFontSize": "Font size:",
        "bitmapFontLineHeight": "Line height:",
        "resultingBitmapFontName": "Resource name",
        "charset": "Charset:",
        "charsets": {
            "punctuation": "Digits and punctuation (you usually do need this)",
            "basicLatin": "Basic Latin",
            "latinExtended": "Latin extended",
            "cyrillic": "Cyrillic",
            "greekCoptic": "Greek and Coptic",
            "custom": "Custom",
            "allInFont": "Draw everything the font supports"
        },
        "customCharsetHint": "Type all the letters you want to include, both in upper and lower case.",
        "fontWeight": "Font weight:",
        "typefaceName": "Typeface name:"
    },
    "licensePanel": {
        "ctjsLicense": "Ct.js License (MIT)",
        "faq": "Frequently asked questions (non-normative section)",
        "whoOwnsGamesQ": "Who owns games created in ct.js?",
        "whoOwnsGamesA": "You and only you. Ct.js does not own anything you create in any way.",
        "sellingGamesQ": "Can I sell games made in ct.js?",
        "sellingGamesA": "Yes, you can sell your games and other projects, gather donations, and use your games in any other commercial applications.",
        "possibleFeesQ": "Do I need to pay for ct.js? Will ct.js become paid someday?",
        "possibleFeesA": "No, ct.js is free and will always be so. It doesn't have any hidden fees like Unity or Unreal Engine that require you paying after you earn a specific amount of money. Ct.js is open-source, and even if there will be any paid versions, the product you have now will always be accessible free of charge. You can send a donation or become a patron, though! It will help us pay bills and make ct.js better!",
        "useInStudioQ": "Can I use ct.js in a studio or schools?",
        "useInStudioA": "Sure, why not? Ct.js is open for personal, commercial, educational use, and whatnot. Just don't break the law, ok?",
        "attributionQ": "Do I need to attribute ct.js or its developers? Can I disable its logo on the loading screen?",
        "attributionA": "You can disable the ct.js logo, as the code of your game already has the necessary attributions.",
        "attributionAAssets": "Some of the examples and demos may contain material that needs attribution, but that is already included in them.",
        "theLicense": "The license (legal document)"
    },
    "scriptables": {
        "addEvent": "Add an event",
        "removeEvent": "Remove the event",
        "removeEventConfirm": "Are you sure you want to remove this event? This can't be undone!",
        "changeArguments": "Change arguments",
        "eventAlreadyExists": "The same event already exists!",
        "localEventVars": "Local variables",
        "createEventHint": "Create your first event in the left column, and define your logic here",
        "coreEventsCategories": {
            "lifecycle": "Lifecycle",
            "actions": "Actions",
            "pointer": "Pointer events",
            "misc": "Miscellaneous",
            "animation": "Animation",
            "timers": "Timers"
        },
        "coreEvents": {
            "OnCreate": "Creation",
            "OnRoomStart": "Room start",
            "OnStep": "Frame start",
            "OnDraw": "Frame end",
            "OnDestroy": "Destruction",
            "OnRoomEnd": "Room end",
            "OnPointerClick": "Click",
            "OnPointerSecondaryClick": "Secondary click",
            "OnPointerEnter": "Pointer enter",
            "OnPointerLeave": "Pointer leave",
            "OnPointerDown": "Pointer down",
            "OnPointerUp": "Pointer up",
            "OnPointerUpOutside": "Pointer up (outside)",
            "OnPointerWheel": "Wheel scroll",
            "OnActionPress": "Action press",
            "OnActionRelease": "Action release",
            "OnActionDown": "Action down",
            "OnFrameChange": "Frame change",
            "OnAnimationLoop": "Animation loop",
            "OnAnimationComplete": "Animation completed",
            "Timer": "Timer $1"
        },
        "coreParameterizedNames": {
            "OnActionPress": "On %%action%% press",
            "OnActionRelease": "On %%action%% release",
            "OnActionDown": "On %%action%% down",
            "Timer1": "1 • %%name%% (Timer)",
            "Timer2": "2 • %%name%% (Timer)",
            "Timer3": "3 • %%name%% (Timer)",
            "Timer4": "4 • %%name%% (Timer)",
            "Timer5": "5 • %%name%% (Timer)",
            "Timer6": "6 • %%name%% (Timer)"
        },
        "coreEventsArguments": {
            "action": "Action",
            "name": "Name",
            "isUi": "UI event"
        },
        "coreEventsLocals": {
            "OnActionDown_value": "Current action's value",
            "OnActionPress_value": "Current action's value"
        },
        "coreEventsDescriptions": {
            "OnCreate": "Triggers when your copy is created.",
            "OnRoomStart": "Triggers when this room is created, either by switching to it or by adding it as a layer.",
            "OnStep": "Happens at the beginning of every frame.",
            "OnDraw": "Happens at the end of every frame. Good for animation updates.",
            "OnDestroy": "Happens between \"frame start\" and \"frame end\" when this copy gets destroyed.",
            "OnRoomEnd": "Triggers when you switch to another room, or when this room is removed after it was added as a layer.",
            "OnActionPress": "Happens when an action's input becomes active — by pressing, clicking, flicking a joystick, etc.",
            "OnActionRelease": "Happens when an action's input becomes inactive — by releasing buttons, resting joysticks, etc.",
            "OnActionDown": "Runs every frame if an action's input is active.",
            "OnAnimationLoop": "Fires every time an animation restarts.",
            "OnAnimationComplete": "Fires once a non-looping animation finishes.",
            "Timer": "Set the duration for this timer in seconds with this.timer$1 = 3;"
        }
    },
    "templates": {
        "create": "Create"
    },
    "templateView": {
        "change": "Change sprite",
        "create": "On Create",
        "destroy": "On Destroy",
        "done": "Done",
        "draw": "Draw",
        "learnAboutTypes": "Learn about coding templates",
        "name": "Name:",
        "step": "On Step",
        "appearance": "Appearance",
        "visible": "Visible",
        "depth": "Depth:",
        "opacity": "Opacity:",
        "blendMode": "Blend mode:",
        "animationFPS": "Animation FPS:",
        "playAnimationOnStart": "Play animation on start",
        "loopAnimation": "Loop animation",
        "blendModes": {
            "normal": "Normal",
            "add": "Add (burn)",
            "multiply": "Multiply (darken)",
            "screen": "Screen (lighten)"
        }
    }
}
