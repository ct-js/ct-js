doctype html
html
    include includes/head.pug
    body.maximized(data-manage-window)
        root-tag
        script.
            try {
                require('gulp');
                console.log(`
            ╭──────────────────────────────────────────╮
            │                                          ├──╮
            │           O-o-oh, a developer!           │  │
            │                                          │  │
            │   If you have recently pulled changes    │  │
            │   and face issues unseen before, run     │  │
            │   this command in your console:          │  │
            │                                          │  │
            │   $ gulp -f devSetup.gulpfile.js         │  │
            │                                          │  │
            ╰─┬────────────────────────────────────────╯  │
              ╰───────────────────────────────────────────╯
                `);
            } catch (e) {
                void e;
            }
        script(src="node_modules/pixi.js-legacy/dist/pixi-legacy.min.js")
        script(src="data/ct.release/DragonBones.min.js")
        script(src="node_modules/pixi-particles/dist/pixi-particles.min.js")
        script.
            /* So that WebGL contexts are taken from one page,
               even if PIXI was called from the background page,
               which is used for node modules
            */
            global.PIXI = PIXI;
        script.
            // A polyfill for different nw.js versions
            if (!window.__dirname) {
                window.__dirname = global.__dirname;
            }
        include includes/footer.pug
        script.
            // @see https://github.com/microsoft/monaco-editor-samples/blob/master/nwjs-amd-v2/index.html
            (function() {
               var ERequire = require('node_modules/monaco-editor/min/vs/loader.js');
                //__dirname == root path of you application
                ERequire.config({
                    baseUrl: 'file:///'+global.__dirname.replace(/\\/g, '\\\\')+'/node_modules/monaco-editor/min/'
                });
                // workaround monaco-css not understanding the environment
                self.module = undefined;
                // workaround monaco-typescript not understanding the environment
                self.process.browser = true;
                ERequire(['vs/editor/editor.main'], function() {
                    const tomorrow = require('./data/node_requires/monaco-themes/tomorrow.json');
                    const horizon = require('./data/node_requires/monaco-themes/horizon.json');
                    const ambiance = require('./data/node_requires/monaco-themes/ambiance.json');
                    window.monaco = global.monaco;
                    monaco.editor.defineTheme('tomorrow', tomorrow);
                    monaco.editor.defineTheme('horizon', horizon);
                    monaco.editor.defineTheme('ambiance', ambiance);
                    window.signals = window.signals || riot.observable({});
                    window.signals.trigger('monacoBooted');
                });
            })();
        script.
            'use strict';
            window.signals = window.signals || riot.observable({});
            riot.mount('*');
            setTimeout(() => {
                document.getElementById('loading').classList.add('fadeout');
            }, 0)
