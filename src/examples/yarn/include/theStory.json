[
	{
		"title": "Start",
		"tags": "cat:happy",
		"body": "Hello, fellow game developer! You are playing the educational demo of using Yarn Editor for creating interactive dialogues in ct.js!\n\n[[Answer:Such wow. I'm in.|What is Yarn]]",
		"position": {
			"x": 25,
			"y": 189
		},
		"colorID": 0
	},
	{
		"title": "What is Yarn",
		"tags": "cat:thoughtful",
		"body": "Yarn Editor is an open-source for writing game dialogues. Its license is MIT, much like ct.js, and it means that you can use Yarn Editor in any of your projects, be they commercial or not. For free.\n\n[[Answer:Cool! So, how to use Yarn projects in ct.js?|How to export a project]]",
		"position": {
			"x": 363,
			"y": 181
		},
		"colorID": 0
	},
	{
		"title": "How to export a project",
		"tags": "cat:normal",
		"body": "Yarn is available at yarnspinnertool.github.io/YarnEditor/\nDesign your dialogue, then open the File menu â†’ Save as JSON.\n\n[[Answer:Done.|Importing it to ct.js]]",
		"position": {
			"x": 681,
			"y": 188
		},
		"colorID": 0
	},
	{
		"title": "Importing it to ct.js",
		"tags": "cat:happy",
		"body": "Open the downloaded JSON file and copy its contents. Now open ct.js. Click the \"Settings\" tab, and create a new script. Write the beginning of a line:\nvar myStory = \nand then paste the JSON file. That's enough, you can save the script and move on.\n\n[[Answer:Wait, where do I get this JSON file, again?|How to export a project]]\n[[Answer:Got it.|Opening a story]]",
		"position": {
			"x": 995,
			"y": 204
		},
		"colorID": 0
	},
	{
		"title": "Opening a story",
		"tags": "",
		"body": "The JSON file is still a raw product, though. In order to use your story, you should first load it in your game's code. For example, we can write the following to a room's OnCreate code:\nct.room.story = ct.yarn.openStory(myStory);\nct.yarn will read your JSON and structure it in a more useful format. You can now use other methods of ct.yarn to navigate your story, search for its nodes and get dialogue options.\n\n[[Answer:Mhmâ€¦|Navigating a story]]",
		"position": {
			"x": 1308,
			"y": 195
		},
		"colorID": 0
	},
	{
		"title": "Navigating a story",
		"tags": "cat:thoughtful",
		"body": "We should now use ct.room.story in our function calls:\nct.room.story.start() will put us in the beginning of it. It is called automatically after creating a project, though.\nct.room.story.options is an array of strings with currently available dialogue options.\nct.room.story.say(string) will navigate the story further. The string must match with entries from ct.room.story.options()\nct.room.story.jump(string) will open a node with a given name. Note that it is different from dialogue options!\nct.room.story.back() will switch to the previous story node. It works just once, though, like in ye olde MS Paint.\n\n[[Answer:But what about the speech of NPCs and stuff?|Getting the current scene]]\n[[Answer:Wait-wait-wait, what is ct.room.story.jump, again?|ct.room.story.jump]]",
		"position": {
			"x": 1588,
			"y": 185
		},
		"colorID": 0
	},
	{
		"title": "Getting the current scene",
		"tags": "cat:thoughtful",
		"body": "The details of the current node can be read by these variables:\n\n\nct.room.story.text is what I'm saying right now :) It is the body of your node in Yarn.\nct.room.story.title is the name of a node. You can view it in the top-left corner there.\nct.room.story.raw is an object with the unprocessed body and other meta information exported by Yarn.\nct.room.story.commands is an array of strings with commands included in the story node.\nct.room.story.tags is an array of strings with tags written at Yarn Editor. Use them however you want!\n\n[[Answer:How do you use tags, though?|Example of tags]]\n[[Answer:Are there any special variables?|Extra functions]]",
		"position": {
			"x": 1899,
			"y": 188
		},
		"colorID": 0
	},
	{
		"title": "Example of tags",
		"tags": "cat:happy sound:tada",
		"body": "I use them to change my texture and play sounds!\n\n[[Answer:Whoa! *O* Anything else??|Extra functions]]",
		"position": {
			"x": 2161,
			"y": 448
		},
		"colorID": 0
	},
	{
		"title": "ct.room.story.jump",
		"tags": "",
		"body": "All nodes in Yarn are named, and you can use them to instantly jump to a specific node, out of your story's flow. Just think about its debugging capabilities ðŸ‘€\nIf you haven't specifically named all your story nodes in Yarn Editor, they all are probably just Node1, Node2, Node3â€¦ nothing fancy, really.\n\n[[Answer:Ok, I gotcha|Getting the current scene]]",
		"position": {
			"x": 1699,
			"y": 489
		},
		"colorID": 0
	},
	{
		"title": "Extra functions",
		"tags": "cat:normal",
		"body": "Yes, there are some extra variables that may help you:\n\nct.room.story.nodes is a map of all the nodes in your story. E.g. ct.room.story.nodes['Extra functions'] will return the current node.\nct.room.story.startingNode is the name of, well, the starting node.\n\n[[Answer:That's dope! But I have some questionsâ€¦|FAQ]]",
		"position": {
			"x": 2423,
			"y": 178
		},
		"colorID": 0
	},
	{
		"title": "FAQ",
		"tags": "cat:normal",
		"body": "Ask me anything. Well, anything that was hardcoded by Comigo.\n\n[[Answer:How do I use multiple Yarn projects?|How do I use multiple Yarn projects?]]\n[[Answer:How do I make transitions, effects and stuff?|How do I make transitions, effects and stuff?]]\n[[Answer:How do I format my story nodes in the Yarn Editor?|How do I format my story nodes in the Yarn Editor?]]\n[[Answer:Where are the sources of this demo?|Where are the sources of this demo?]]\n[[Answer:Scripts are not that handy, especially when updating the story. Other options??|Loading stories from a file]]",
		"position": {
			"x": 2715,
			"y": 252
		},
		"colorID": 0
	},
	{
		"title": "How do I use multiple Yarn projects?",
		"tags": "cat:happy",
		"body": "That's actually easy. Export each one to JSON, create one Script in ct's Settings tab, and give them different variable names. E.g.\nvar detectiveMystery = {/*yarn json goes here*/};\n/*in the other Script*/\nvar bossMonologue = {/* another yarn json */};\n/* and in the other */\nvar iLoveChocolate = {/* here ct bursts into tears and eats all the chocolate */};\n\nAnd so on.\n\n[[Answer:Thanks!|FAQ]]",
		"position": {
			"x": 2980,
			"y": 447
		},
		"colorID": 0
	},
	{
		"title": "How do I make transitions, effects and stuff?",
		"tags": "cat:happy",
		"body": "That's up to you! You have the power of ct.js, the flexibility of JavaScript and the exploitability of this module.\nYou can split your stories into scenes, load them into ct.js, and then create a room for each one, with nifty backgrounds and decorations. Much like in visual novels! *U*\nYou can use ct.room.story.raw instead of e.g. ct.room.story.text to get the source of a node and get extra variables that you put in the body of your node.\n\nIf you struggle, though, check out the source of this edutational demo!\n\n[[Answer:Thanks!|FAQ]]",
		"position": {
			"x": 2980,
			"y": 203
		},
		"colorID": 0
	},
	{
		"title": "How do I format my story nodes in the Yarn Editor?",
		"tags": "cat:normal",
		"body": "It is recommended that you put dialogue options at the end of a node. Otherwise, use Yarn as usual!\n\n[[Answer:Thanks!|FAQ]]",
		"position": {
			"x": 2938,
			"y": 712
		},
		"colorID": 0
	},
	{
		"title": "Where are the sources of this demo?",
		"tags": "",
		"body": "They are bundled with each fresh ct.js version. Check the ct.js folder > examples > yarn.ict.\n\n[[Answer:Thanks!|FAQ]]",
		"position": {
			"x": 2666,
			"y": 569
		},
		"colorID": 0
	},
	{
		"title": "Loading stories from a file",
		"tags": "cat:thoughtful",
		"body": "You can use this code to load a story from an external file:\n\nct.yarn.openFromFile('myStory.json')\n.then(story => {\n    ct.room.story = story;\n});\n\nJSON files are better placed into your projects folder â†’ 'include' subdirectory.\n\n[[Answer:Thanks!|FAQ]]",
		"position": {
			"x": 2982,
			"y": -72
		},
		"colorID": 0
	}
]