notes: /* empty */
libs:
  random: {}
  mouse: {}
  fittoscreen:
    mode: scaleFit
  tween: {}
types:
  - name: Card
    depth: 0
    oncreate: >-
      // Make a smooth scale-in animation

      this.scale.x = this.scale.y = 0;

      ct.tween.add({
          obj: this.scale,
          fields: {
              x: 0.5,
              y: 0.5
          },
          duration: 350
      });


      this.drop = false;

      this.block = false;

      this.flipped = false;


      // These variables will be used only when a card is dropped. See OnStep
      for that

      // A card will jump above and then fall down

      // 90° = move to top, but we will create a 30° spread around it.

      this.rotationSpeed = ct.random.range(-12, 12);

      this.speed = 25;

      this.direction = ct.random.range(-60, -120);

      this.gravity = 1.5;

      this.gravityDir = 90;
    onstep: |-
      /*
          Scenario:
              Select a card;
              Select another card.
                  If the cards match, block them and drop after 0.5 seconds
                  If they don't, block them, but unblock and flip after 0.5 seconds.

          Blocked cards may not be selected.
          If we select the same card twice, it flips back.
      */

      // If mouse was clicked and the card isn't blocked…
      if (ct.mouse.pressed && !this.block) {
          // …if player clicked exactly this card…
          if (ct.u.pointRectangle(ct.mouse.x, ct.mouse.y, this)) {
              // Flip a card
              this.flipped = !this.flipped;
              ct.sound.spawn('Paper');
              if (this.flipped) { // Is a picture visible now?
                  if (ct.room.card) { // Is another card was already selected?
                      // remember our cards
                      var card1 = this,
                          card2 = ct.room.card;
                      // Block them
                      card1.block = true;
                      card2.block = true;
                      // Allow new cards to be selected
                      ct.room.card = false;

                      // Do the cards match?
                      if (card1.backFrame === card2.backFrame) {
                          if (ct.types.list['Card'].length > 2) {
                              ct.sound.spawn('Match');
                          } else {
                              ct.sound.spawn('Victory');
                          }
                          ct.u.wait(500)
                          .then(() => {
                              ct.sound.spawn('Swoosh');
                              card1.drop = true;
                              card2.drop = true;
                          });
                      } else {
                          ct.u.wait(500)
                          .then(() => {
                              ct.sound.spawn('Rollback');
                              card1.block = false;
                              card2.block = false;

                              card1.flipped = false;
                              card2.flipped = false;
                          });
                      }
                  } else {
                      ct.room.card = this;
                  }
              } else {
                  ct.room.card = false;
              }
          }
      }

      if (this.drop) {
          ct.types.move(this);
          this.angle += this.rotationSpeed * ct.delta;
          if (this.y > ct.height + 160) {
              this.kill = true;
          }
      }
    ondraw: |-
      if (this.flipped) {
          this.gotoAndStop(this.backFrame);
      } else {
          this.gotoAndStop(0);
      }
    ondestroy: ''
    uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
    lastmod: 1566575039596
    extends: {}
    texture: 366c01b5-4ed5-4ca5-bf01-8731a04be2c4
sounds:
  - name: Match
    uid: 96dbce18-a291-41b6-9707-ff2dc2bb5b77
    origname: s0.wav
    lastmod: 1522740214929
  - name: Swoosh
    uid: 1385f5fc-28ce-4b52-b668-12e3c75ff3b8
    origname: s1.wav
    lastmod: 1522740231845
  - name: Rollback
    uid: af72e78c-ff23-4016-8179-ca7b5f66d11e
    origname: s2.wav
    lastmod: 1522740243655
  - name: Paper
    uid: efe16fbe-0baf-40af-be62-5138085a2682
    origname: s3.wav
    lastmod: 1522740287935
  - name: Victory
    uid: a1a8f820-66b3-4849-9a22-a81b31e32605
    origname: s4.wav
    lastmod: 1522740953176
  - name: NewLevel
    uid: 4adfa410-6689-4594-8c9e-d8cde988894d
    origname: s5.wav
    lastmod: 1522740963586
styles: []
rooms:
  - name: Room1
    oncreate: |-
      // Grabbed from this: https://stackoverflow.com/a/6274381 (community wiki)
      var shuffle = function(a) {
          var j, x, i;
          for (i = a.length - 1; i > 0; i--) {
              j = Math.floor(Math.random() * (i + 1));
              x = a[i];
              a[i] = a[j];
              a[j] = x;
          }
      };

      // This will be an array of all the possible pictures from Memocats asset
      this.pictures = [];
      for (var i = 1; i < 21; i++) {
          this.pictures.push(i);
      }
      shuffle(this.pictures);

      // Get a list of all the Cards in the room and make a copy of that
      this.cards = ct.types.list['Card'].slice(0);
      shuffle(this.cards);

      // Now, select cards by pairs and set them a unique picture.
      for (var i = 0; i < this.cards.length; i += 2) {
          this.cards[i].backFrame = this.pictures[0];
          this.cards[i+1].backFrame = this.pictures[0];
          // Remove a picture at this.pictures[0]
          this.pictures.shift();
      }
    onstep: |-
      if (ct.types.list['Card'].length === 0) {
          ct.rooms.switch('Room2');
      }
    ondraw: ''
    onleave: ''
    width: 980
    height: 700
    backgrounds:
      - depth: '-10'
        texture: c1b1284b-8dba-4886-9bf7-52b66cc08911
        extends: {}
    uid: 3827e721-5331-49b2-a37a-f868e15cae0d
    grid: 70
    lastmod: 1522741617797
    thumbnail: 1
    gridX: 70
    gridY: 70
    tiles:
      - depth: -10
        tiles: []
        extends: {}
    copies:
      - x: 490
        'y': 210
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 350
        'y': 210
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 210
        'y': 210
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 630
        'y': 210
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 770
        'y': 210
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 210
        'y': 420
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 350
        'y': 420
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 490
        'y': 420
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 630
        'y': 420
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 770
        'y': 420
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
  - name: Room2
    oncreate: |-
      ct.sound.spawn('NewLevel');

      // Grabbed from this: https://stackoverflow.com/a/6274381 (community wiki)
      var shuffle = function(a) {
          var j, x, i;
          for (i = a.length - 1; i > 0; i--) {
              j = Math.floor(Math.random() * (i + 1));
              x = a[i];
              a[i] = a[j];
              a[j] = x;
          }
      };

      // This will be an array of all the possible pictures from Memocats asset
      this.pictures = [];
      for (var i = 1; i < 21; i++) {
          this.pictures.push(i);
      }
      shuffle(this.pictures);

      // Get a list of all the Cards in the room and make a copy of that
      this.cards = ct.types.list['Card'].slice(0);
      shuffle(this.cards);

      // Now, select cards by pairs and set them a unique picture.
      for (var i = 0; i < this.cards.length; i += 2) {
          this.cards[i].backFrame = this.pictures[0];
          this.cards[i+1].backFrame = this.pictures[0];
          // Remove a picture at this.pictures[0]
          this.pictures.shift();
      }
    onstep: |-
      if (ct.types.list['Card'].length === 0) {
          ct.rooms.switch('Room3');
      }
    ondraw: ''
    onleave: ''
    width: 980
    height: 700
    backgrounds:
      - depth: '-10'
        texture: c1b1284b-8dba-4886-9bf7-52b66cc08911
    uid: a751fef2-0632-4105-b90b-51ffba3f38f5
    grid: 70
    lastmod: 1522741609956
    thumbnail: 2
    copies:
      - x: 560
        'y': 140
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 420
        'y': 140
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 280
        'y': 140
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 700
        'y': 140
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 840
        'y': 140
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 140
        'y': 140
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 140
        'y': 350
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 280
        'y': 350
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 420
        'y': 350
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 560
        'y': 350
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 700
        'y': 350
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 840
        'y': 350
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 420
        'y': 560
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 560
        'y': 560
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
    tiles: []
  - name: Room3
    oncreate: |-
      ct.sound.spawn('NewLevel');

      // Grabbed from this: https://stackoverflow.com/a/6274381 (community wiki)
      var shuffle = function(a) {
          var j, x, i;
          for (i = a.length - 1; i > 0; i--) {
              j = Math.floor(Math.random() * (i + 1));
              x = a[i];
              a[i] = a[j];
              a[j] = x;
          }
      };

      // This will be an array of all the possible pictures from Memocats asset
      this.pictures = [];
      for (var i = 1; i < 21; i++) {
          this.pictures.push(i);
      }
      shuffle(this.pictures);

      // Get a list of all the Cards in the room and make a copy of that
      this.cards = ct.types.list['Card'].slice(0);
      shuffle(this.cards);

      // Now, select cards by pairs and set them a unique picture.
      for (var i = 0; i < this.cards.length; i += 2) {
          this.cards[i].backFrame = this.pictures[0];
          this.cards[i+1].backFrame = this.pictures[0];
          // Remove a picture at this.pictures[0]
          this.pictures.shift();
      }
    onstep: |-
      if (ct.types.list['Card'].length === 0) {
          ct.rooms.switch('Room3');
      }
    ondraw: ''
    onleave: ''
    width: 980
    height: 700
    backgrounds:
      - depth: '-10'
        texture: c1b1284b-8dba-4886-9bf7-52b66cc08911
    uid: 4cd06702-30ed-4d80-8609-c1128f14f6a8
    grid: 70
    lastmod: 1522741558307
    thumbnail: 3
    copies:
      - x: 420
        'y': 140
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 560
        'y': 140
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 700
        'y': 140
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 840
        'y': 140
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 280
        'y': 140
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 140
        'y': 140
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 140
        'y': 350
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 280
        'y': 350
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 420
        'y': 350
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 560
        'y': 350
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 700
        'y': 350
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 840
        'y': 350
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 840
        'y': 560
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 700
        'y': 560
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 560
        'y': 560
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 420
        'y': 560
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 280
        'y': 560
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
      - x: 140
        'y': 560
        uid: 2120f62d-54b7-4ab1-8788-7f70b59d3c0c
        exts: {}
    tiles: []
soundtick: 6
roomtick: 3
typetick: 1
styletick: 0
starting: 0
settings:
  export:
    linux: true
    windows: true
    mac: true
  branding:
    icon: -1
    accent: '#446adb'
    invertPreloaderScheme: true
  rendering:
    maxFPS: 60
    pixelatedrender: false
    highDensity: true
    usePixiLegacy: true
    desktopMode: maximized
  authoring:
    title: Memocats
    author: Cosmo Myzrail Gorynych
    site: 'https://ctjs.rocks'
    version:
      - 0
      - 0
      - 0
    versionPostfix: ''
  fps: 30
startroom: 3827e721-5331-49b2-a37a-f868e15cae0d
ctjsVersion: 1.4.2
scripts: []
fonts: []
skeletons: []
actions: []
textures:
  - name: Memocats
    untill: 0
    grid:
      - 7
      - 3
    axis:
      - 128
      - 196
    marginx: 0
    marginy: 0
    imgWidth: 1792
    imgHeight: 1176
    width: 256
    height: 392
    offx: 0
    offy: 0
    origname: i366c01b5-4ed5-4ca5-bf01-8731a04be2c4.png
    shape: rect
    left: 128
    right: 128
    top: 196
    bottom: 196
    lastmod: 1587612594276
    uid: 366c01b5-4ed5-4ca5-bf01-8731a04be2c4
    padding: 1
    source: /home/comigo/Desktop/Memocats.png
  - name: Bg
    untill: 0
    grid:
      - 1
      - 1
    axis:
      - 0
      - 0
    marginx: 0
    marginy: 0
    imgWidth: 980
    imgHeight: 700
    width: 980
    height: 700
    offx: 0
    offy: 0
    origname: i2.png
    shape: rect
    left: 0
    right: 980
    top: 0
    bottom: 700
    lastmod: 1522741667520
    uid: c1b1284b-8dba-4886-9bf7-52b66cc08911
    padding: 1
texturetick: 2
emitterTandems: []
